---
import Section from "../components/Section.astro";
import Layout from "../layouts/Layout.astro";

const courses = [
  {
    name: "D.Pharm",
    eligibility:
      "Passed 10+2 with Physics, Chemistry, and Mathematics/Biology WITHOUT GRACE from recognized Board/University. Admission through JEECUP rank. Students appearing in the qualifying examination are also eligible for admission subject to the fulfillment of the requirements of education, age and physical fitness etc. as prescribed by the examining body during counselling /admission.",
    seats: 60,
    duration: "2 Years",
    syllabus: {
      title: "DPharm 1st Year & 2nd Year NEW SYLLABUS",
      link: "https://sdcopmzn.com/rc_images/dpharm_syllabus.pdf",
    },
  },
  {
    name: "B.Pharm",
    eligibility:
      "Passed 10+2 with PCM/PCB: 50% (Gen/OBC), 45% (SC/ST). Admission through CUET (UG).Students appearing in the qualifying examination are also eligible for admission subject to the fulfilment of the requirements of education, age and physical fitness etc. as prescribed by the examining body during counselling /admission.The students can take admission in college through CUET (UG) valid rank and merit basis.",
    seats: 100,
    duration: "4 Years",
    lateral:
      "Diploma holders with 50% (Gen/OBC) or 55% (SC/ST) eligible for direct 2nd year admission.recognized by the U.P. Board of Technical Education/or its equivalent are eligible for direct admission to second year (lateral entry) of B.Pharm course.",
    syllabus: {
      title: "Bachelor of Pharmacy I, II, III & IV Year syllabus",
      link: "https://sdcopmzn.com/rc_images/bpharm_syllabus.pdf",
    },
  },
  {
    name: "M.Pharm",
    eligibility:
      "B.Pharm with 60% (Gen/OBC) or 55% (SC/ST). GPAT/CUET score preferred.\nCandidates with valid GPAT/CUET Score will be preferred.",
    seats: 15 + 9,
    duration: "2 Years",
    specializations: [
      { name: "Pharmaceutical Chemistry", seats: 15 },
      { name: "Pharmacognosy", seats: 9 },
    ],
    syllabus: [
      {
        title:
          "Master of Pharmacy 1st & 2nd Year syllabus (Pharmaceutical Chemistry)",
        link: "https://sdcopmzn.com/rc_images/pharmaceutical_chemistry.pdf",
      },
      {
        title: "Master of Pharmacy 1st & 2nd Year syllabus (Pharmacognosy)",
        link: "https://sdcopmzn.com/rc_images/pharmacognosy_syllabus.pdf",
      },
    ],
  },
];
---

<Layout>
  <Section background="white">
    <div class="flex flex-row justify-between items-end mb-8 mx-auto max-w-5xl">
      <h2 class="heading text-3xl text-emerald-800">Our Courses</h2>
      <div class="flex flex-row gap-2">
        <a
          href="https://sdcopmzn.com/admission_form.doc"
          class="underline font-semibold cursor-pointer hover:text-green-800"
        >
          Download Admission Form
        </a>
      </div>
    </div>

    <div class="space-y-6" id="buttons">
      {
        courses.map((course, index) => (
          <div class="border rounded-lg overflow-hidden max-w-5xl mx-auto">
            <button
              id={`btn-course-${course.name.toLowerCase().replace(/ /g, "").replace(/\./g, "")}`}
              class="w-full px-6 py-4 text-left bg-emerald-700 text-white font-semibold flex justify-between items-center hover:bg-emerald-800 transition-colors"
            >
              {course.name}
              <svg
                class="w-6 h-6 transition-transform"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
              >
                <path d="M19 9l-7 7-7-7" />
              </svg>
            </button>

            <div
              id={`course-${course.name.toLowerCase().replace(/ /g, "").replace(/\./g, "")}`}
              class={`hidden bg-white p-6 space-y-4`}
            >
              <div class="grid grid-cols-2 gap-4 mb-4">
                {course.duration && (
                  <div>
                    <h4 class="font-bold text-emerald-800">Duration</h4>
                    <p>{course.duration}</p>
                  </div>
                )}
                {course.seats && (
                  <div>
                    <h4 class="font-bold text-emerald-800">Seats</h4>
                    <p>{course.seats}</p>
                  </div>
                )}
              </div>

              <div>
                <h4 class="font-bold text-emerald-800 mb-2">Eligibility</h4>
                <p class="text-justify">{course.eligibility}</p>
              </div>

              {course.lateral && (
                <div>
                  <h4 class="font-bold text-emerald-800 mb-2">Lateral Entry</h4>
                  <p>{course.lateral}</p>
                </div>
              )}

              {course.specializations && (
                <div>
                  <h4 class="font-bold text-emerald-800 mb-2">
                    Specializations
                  </h4>
                  <ul class="list-disc pl-5 space-y-2">
                    {course.specializations.map((spec) => (
                      <li>
                        {spec.name} - {spec.seats} seats
                      </li>
                    ))}
                  </ul>
                </div>
              )}

              <div class="border-t pt-4">
                <h4 class="font-bold text-emerald-800 mb-2">Syllabus</h4>
                {Array.isArray(course.syllabus) ? (
                  <ul class="space-y-2">
                    {course.syllabus.map((syl) => (
                      <li>
                        <a
                          href={syl.link}
                          class="text-emerald-600 hover:underline"
                        >
                          {syl.title}
                        </a>
                      </li>
                    ))}
                  </ul>
                ) : (
                  <a
                    href={course.syllabus.link}
                    class="text-emerald-600 hover:underline"
                  >
                    {course.syllabus.title}
                  </a>
                )}
              </div>
            </div>
          </div>
        ))
      }
    </div>
  </Section>
</Layout>

<style>
  .heading {
    @apply font-oswald text-[40px] font-[500] tracking-wide;
  }
  .text {
    @apply text-2xl font-nunito leading-9;
  }
</style>
<script>
  function closeDrawer() {
    const buttons = document.getElementById("buttons");
    buttons?.addEventListener("click", (e) => {
      if (e?.target?.tagName === "BUTTON") {
        e.target.nextElementSibling.classList.toggle("hidden");
      }
    });
  }

  // Function to toggle the drawer programmatically
  function toggleDrawerById(id) {
    const courseElement = document.getElementById(`course-${id}`);
    const arrowIcon = document.querySelector(`#btn-course-${id} svg`);

    if (courseElement) {
      courseElement.classList.remove("hidden"); // Show the drawer
      arrowIcon?.classList.add("rotate-180"); // Rotate the arrow icon
    }
  }

  // Function to close all drawers
  function closeAllDrawers() {
    document.querySelectorAll(".course-drawer").forEach((drawer) => {
      drawer.classList.add("hidden");
    });

    document.querySelectorAll("button svg").forEach((svg) => {
      svg.classList.remove("rotate-180");
    });
  }

  // Handle hash changes
  function handleHashChange() {
    const hash = window.location.hash.substring(1); // Remove '#' from the hash
    if (hash) {
      closeAllDrawers(); // Close any open drawers
      toggleDrawerById(hash); // Open the correct drawer
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    handleHashChange(); // Open the drawer based on the initial URL hash
    window.addEventListener("hashchange", handleHashChange); // Listen for hash changes
    closeDrawer();
  });
</script>
